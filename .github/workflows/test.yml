name: SBOM and Upload to Dependency Track

on:
  push: # Adjust this trigger as needed (e.g., remove workflow_dispatch)

jobs:
  sbom-and-upload:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' # Adjust the Python version as necessary for your project

      # Install system dependencies required for the Python project
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libkrb5-dev

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tabulate
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Generate a full list of dependencies including transitive dependencies
      - name: Generate comprehensive requirements.txt
        run: pip freeze > full_requirements.txt

      # Generate Python SBOM using the CycloneDX Action
      - name: Generate Python SBOM
        uses: CycloneDX/gh-python-generate-sbom@v2
        with:
          input: ./full_requirements.txt
          output: ./bom.json
          format: json

      # Upload SBOM to Dependency-Track
      - name: Upload BOM to Dependency-Track
        uses: DependencyTrack/gh-upload-sbom@v2.0.0
        with:
          serverhostname: '164.52.193.50:8080' # Use your server's IP and port
          apikey: ${{ secrets.DEPENDENCYTRACK_APIKEY }}
          projectname: 'test'
          projectversion: '1.0'

      # Parse SBOM and Create Table
      - name: Parse SBOM and Create Table
        run: |
          python - <<EOF
          import json
          from tabulate import tabulate
          with open('bom.json') as bom_file:
              data = json.load(bom_file)
              components = data.get('components', [])
              table = tabulate(components, headers='keys', tablefmt='github')
              print(table)
              with open('sbom_table.txt', 'w') as f:
                  f.write(table)
          EOF

      # Upload SBOM tabular artifact
      - uses: actions/upload-artifact@v2
        with:
          name: sbom-tabular-artifact
          path: sbom_table.txt

name: SBOMXML
on:
  push: # Trigger the workflow on push events

jobs:
  sbom-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libkrb5-dev
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Generate SBOM (XML)
        uses: CycloneDX/gh-python-generate-sbom@v2
        with:
          input: requirements.txt
          output: bom.xml
          format: xml

      - name: Generate SBOM (JSON)
        uses: CycloneDX/gh-python-generate-sbom@v2
        with:
          input: requirements.txt
          output: bom.json
          format: json

      - name: Upload SBOMs to Dependency-Track
        run: |
          DEPENDENCY_TRACK_URL="http://your_dependency_track_server_address:port/api/v1/bom"
          API_KEY="${{ secrets.DEPENDENCYTRACK_APIKEY }}"
          PROJECT_UUID="your_project_uuid"

          for BOM_FILE in bom.xml bom.json; do
            echo "Uploading $BOM_FILE to Dependency-Track"
            BOM_ENCODED=$(base64 -w 0 $BOM_FILE)
            RESPONSE=$(curl -k -X "POST" \
              --url "$DEPENDENCY_TRACK_URL" \
              -H "X-Api-Key: $API_KEY" \
              -H "Content-Type: application/json" \
              -d "{\"project\":\"$PROJECT_UUID\",\"bom\":\"$BOM_ENCODED\"}" \
              -w "%{http_code}" -o response.txt -s)
              
            if [ "$RESPONSE" -ne 200 ]; then
              echo "Failed to upload $BOM_FILE. HTTP Status: $RESPONSE"
              echo "Response body:"
              cat response.txt
              exit 1
            else
              echo "$BOM_FILE uploaded successfully."
            fi
          done

      - name: Archive SBOM Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sbom-artifacts
          path: |
            bom.xml
            bom.json

name: Generate SBOM, Scan Vulnerabilities with Safety in Tabular Format, and Upload Artifacts

on:
  push:
    branches:
      - master # Adjust this as needed for your project

jobs:
  safety-scan-and-format:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      # Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' # Adjust as necessary for your project

      # Install Python dependencies, tabulate, and safety
      - name: Install dependencies, tabulate, and safety
        run: |
          python -m pip install --upgrade pip
          pip install tabulate safety
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Run Safety to check for vulnerabilities and save output in JSON format
      - name: Run Safety and save output
        run: safety check --json > safety_output.json

      # Format Safety output in a tabular format
      - name: Format Safety output in tabular format
        run: |
          python - <<EOF
          import json
          from tabulate import tabulate
          with open('safety_output.json') as json_file:
              data = json.load(json_file)
              if not data:
                  print("No vulnerabilities found.")
              else:
                  headers = ['Package', 'Affected', 'Installed', 'Description', 'ID']
                  table_data = [(item['name'], item['vulnerable_versions'], item['installed_version'], item['advisory'], item['cve']) for item in data]
                  table = tabulate(table_data, headers=headers, tablefmt='github')
                  print(table)
                  with open('safety_table.txt', 'w') as table_file:
                      table_file.write(table)
          EOF

      # Upload the formatted Safety output as an artifact
      - uses: actions/upload-artifact@v2
        with:
          name: safety-tabular-artifact
          path: safety_table.txt

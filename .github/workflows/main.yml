name: Security Check

on:
  push:
  workflow_dispatch:

env:
  GCS_SA_KEY: ${{ secrets.GCS_SA_KEY}} 

jobs:
  secret_scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          sudo apt-get install -y diffutils jq python3 python3-pip
          python -m pip install detect-secrets
          python3 -m pip install tabulate
          python -m pip install --upgrade pip

      - name: Run Detect Secrets Scan
        run: |
          detect-secrets scan --only-verified --exclude-files '\.git/.*' --exclude-files '\.gitmodules' >> detect_secrets_output.txt
      
      - name: Print GCS_SA_KEY
        run: echo $GCS_SA_KEY["project_id"]
        
      - name: Parse Detect Secrets Output
        id: parse_output
        run: |
          import json
          import os  # Import the os module
          import sys
          import datetime  # Import the datetime module
          from tabulate import tabulate

          with open("detect_secrets_output.txt", "r") as file:
              data = file.read()
          data_json = json.loads(data)

          table = []  # Initialize an empty table
          table_headers = ["Secret Type", "File", "Hashed Secret", "Line Number"]
          for file, secrets in data_json["results"].items():
              for secret in secrets:
                  if not isinstance(secret, dict):
                      continue
                  secret_type = secret.get("type", "NA")
                  filename = secret.get("filename", "NA")
                  hashed_secret = secret.get("hashed_secret", "NA")
                  line_number = secret.get("line_number", "NA")
                  row = [secret_type, filename, hashed_secret, line_number]
                  table.append(row)

          print(tabulate(table, headers=table_headers, tablefmt='grid'))
          # Naming convention for the txt file
          nameofuser = "cairo"  # Replace this with your username
          nameofjob = "detect_secret"   # Replace this with the job name or any relevant identifier
          # Get the current date and time
          now = datetime.datetime.now()
          date_and_time = now.strftime("%Y-%m-%d_%H-%M")
          filename = f"{nameofuser}_{nameofjob}_{date_and_time}.txt"
          file_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), filename)
          with open(file_path, "w") as file:
              file.write(tabulate(table, headers=table_headers, tablefmt='grid'))
          print(f"Table saved to {file_path}")
        shell: python

# Bandit for Source Code Review
  Bandit:
    name: Bandit Scan
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit
          pip install tabulate
          pip install google-cloud-storage
          
   
          
      - name: Security check - Bandit
        run: |
          bandit -r . > bandit_report.txt || true
      - name: check envion
        run: print(GCS_SA_KEY)

      
